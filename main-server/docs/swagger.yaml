basePath: /
definitions:
  domain.JWTTokenData:
    properties:
      expiresAt:
        type: string
      token:
        type: string
    type: object
  domain.Run:
    properties:
      avatar_url:
        type: string
      creator:
        type: integer
      description:
        type: string
      id:
        type: integer
      max_participants:
        type: integer
      name:
        type: string
      official_site_url:
        type: string
      participation_format:
        $ref: '#/definitions/domain.RunParticipationFormat'
      permissions:
        $ref: '#/definitions/runs.PermissionsType'
      registration_until:
        type: string
      route:
        $ref: '#/definitions/runs.Route'
      start_place:
        $ref: '#/definitions/runs.Place'
      start_time:
        type: string
      status:
        $ref: '#/definitions/domain.RunStatus'
    type: object
  domain.RunParticipationFormat:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - OpenRunFormat
    - ClosedRunFormat
  domain.RunStatus:
    enum:
    - 0
    - 1
    - 2
    - 4
    type: integer
    x-enum-varnames:
    - OpenRunStatus
    - RunningRunStatus
    - FinishedRunStatus
    - CanceledRunStatus
  protocol.CreateRunRequest:
    properties:
      avatar_url:
        type: string
      description:
        type: string
      max_participants:
        type: integer
      name:
        type: string
      official_site_url:
        type: string
      participation_format:
        $ref: '#/definitions/domain.RunParticipationFormat'
      permissions:
        $ref: '#/definitions/runs.PermissionsType'
      registration_until:
        type: string
      route:
        $ref: '#/definitions/runs.Route'
      start_place:
        $ref: '#/definitions/runs.Place'
      start_time:
        type: string
      transaction_id:
        type: string
    type: object
  protocol.CreateRunResponse:
    properties:
      run:
        $ref: '#/definitions/domain.Run'
    type: object
  protocol.ErrorCode:
    enum:
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - CodeUserNameAlreadyTaken
    - CodeWrongPassword
  protocol.ErrorResponse:
    properties:
      code:
        $ref: '#/definitions/protocol.ErrorCode'
      message:
        type: string
    type: object
  protocol.InviteRunRequest:
    properties:
      run_id:
        type: integer
      users:
        items:
          type: integer
        type: array
    type: object
  protocol.InviteRunResponse:
    type: object
  protocol.RefreshTokensRequest:
    properties:
      authToken:
        type: string
      refreshToken:
        type: string
    type: object
  protocol.RefreshTokensResponse:
    properties:
      authToken:
        $ref: '#/definitions/domain.JWTTokenData'
      refreshToken:
        type: string
    type: object
  protocol.SignInRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  protocol.SignInResponse:
    properties:
      authToken:
        $ref: '#/definitions/domain.JWTTokenData'
      refreshToken:
        type: string
    type: object
  protocol.SignUpRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  protocol.SignUpResponse:
    type: object
  protocol.SubscriptionRequest:
    properties:
      userId:
        type: integer
    type: object
  protocol.SubscriptionResponse:
    type: object
  protocol.UpdateRunRequest:
    properties:
      avatar_url:
        type: string
      description:
        type: string
      max_participants:
        type: integer
      name:
        type: string
      official_site_url:
        type: string
      participation_format:
        $ref: '#/definitions/domain.RunParticipationFormat'
      permissions:
        $ref: '#/definitions/runs.PermissionsType'
      registration_until:
        type: string
      route:
        $ref: '#/definitions/runs.Route'
      run_id:
        type: integer
      start_place:
        $ref: '#/definitions/runs.Place'
      start_time:
        type: string
      transaction_id:
        type: string
    type: object
  protocol.UpdateRunResponse:
    properties:
      run:
        $ref: '#/definitions/domain.Run'
    type: object
  runs.PermissionsType:
    enum:
    - 0
    type: integer
    x-enum-varnames:
    - FreePermissionsType
  runs.Place:
    properties:
      address:
        type: string
      point:
        $ref: '#/definitions/runs.Point'
    type: object
  runs.Point:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
  runs.Route:
    properties:
      points:
        items:
          $ref: '#/definitions/runs.Point'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  title: Forest Run API
  version: 0.0.1
paths:
  /api/runs/Invite:
    post:
      description: Invite run
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/protocol.InviteRunRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.InviteRunResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Invite run
      tags:
      - runs
  /api/runs/create:
    post:
      description: Create run
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/protocol.CreateRunRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.CreateRunResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create run
      tags:
      - runs
  /api/runs/update:
    post:
      description: Update run
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/protocol.UpdateRunRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.UpdateRunResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update run
      tags:
      - runs
  /api/subscribe:
    post:
      description: Start receiving notifications of user's actions
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/protocol.SubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.SubscriptionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Subscribe to user
      tags:
      - subscriptions
  /api/unsubscribe:
    post:
      description: Stop receiving notifications of user's actions
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/protocol.SubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.SubscriptionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Unsubscribe from user
      tags:
      - subscriptions
  /auth/refresh:
    post:
      description: Refresh JWT Tokens pair
      parameters:
      - description: Refresh tokens data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/protocol.RefreshTokensRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.RefreshTokensResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Refresh Tokens
      tags:
      - auth
  /auth/sign-in:
    post:
      description: Log into app and get access tokens
      parameters:
      - description: SignIn data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/protocol.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.SignInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
      summary: Sign In
      tags:
      - auth
  /auth/sign-up:
    post:
      description: Register in app
      parameters:
      - description: SignUp data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/protocol.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.SignUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/protocol.ErrorResponse'
      summary: Sign Up
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
